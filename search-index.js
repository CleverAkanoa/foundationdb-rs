var N=null,E="",T="t",U="u",searchIndex={};
var R=["string","result","to_owned","clone_into","try_from","try_into","borrow","borrow_mut","type_id","typeid","__fsid_t","keyvalue","formatter","FDB_future","FDB_database","FDB_transaction","networkautostop","fdbresult","networkbuilder","foundationdb","database","Create a database for the given configuration path","set_option","transaction","transactoption","Creates a `KeySelector` that picks the last key less than…","Creates a `KeySelector` that picks the first key greater…","file path","probability expressed as a percentage between 0 and 100","Hexadecimal ID","Deprecated","value in milliseconds of timeout","number of times to retry","value in milliseconds of maximum delay","SnapshotRywEnable","Snapshot read operations will see the results of writes…","SnapshotRywDisable","Snapshot read operations will not see the results of…","value with which to perform bitwise and","value with which to perform bitwise or","value with which to perform bitwise xor","value to check against database value","Reset the transaction to its initial state.","Modify the database snapshot represented by transaction to…","Reads all key-value pairs in the database snapshot…","rangeoption","on_error","Implements the recommended retry and backoff behavior for…","Versionstamp","foundationdb::tuple","option","FdbError","PackError","subspace","packresult","tupleunpack","as_bytes","tupledepth","into_owned","transact","fdberror","foundationdb::api","foundationdb::future","into_iter","foundationdb::options","to_string","foundationdb::tuple::hca","ordering","try_into_fdb_error","unpack","as_ref","transactioncancelled","keyselector","networkoption","databaseoption","transactionoption","mutationtype","conflictrangetype","default","versionstamp","element","partial_cmp","from_bytes","Creates a UUID using the supplied big-endian bytes.","pack_root","pack_to_vec","unpack_root","TransactOption","RangeOption","FdbApiBuilder","NetworkBuilder","NetworkRunner","NetworkWait","NetworkStop","Database","FdbValues","FdbKeyValue","KeySelector","NetworkOption","DatabaseOption","TransactionOption","StreamingMode","MutationType","ConflictRangeType","ErrorPredicate","TransactionCommitted","TransactionCommitError","TransactionCancelled","Transaction","HighContentionAllocator","TuplePack","TupleUnpack","TupleDepth","DatabaseTransact","TransactError","NetworkAutoStop","FdbAddresses","FdbAddress","FdbValuesIter","fdb_error_t","streamingmode"];
searchIndex["bindingtester"]={"doc":E,"i":[[5,"streaming_from_value","bindingtester",E,N,[[["i32"]],[R[120]]]]],"p":[]};
searchIndex["fdb_bench"]={"doc":E,"i":[],"p":[]};
searchIndex["foundationdb"]={"doc":"FoundationDB Rust Client API","i":[[3,R[94],R[19],"Represents a FoundationDB database",N,N],[3,R[87],E,"A set of options that controls the behavior of…",N,N],[12,"retry_limit",E,E,0,N],[12,"time_out",E,E,0,N],[12,"is_idempotent",E,E,0,N],[3,R[51],E,"The Standard Error type of FoundationDB",N,N],[3,R[97],E,"A `KeySelector` identifies a particular key in the database.",N,N],[3,R[105],E,"A committed transaction.",N,N],[3,R[106],E,"A failed to commit transaction.",N,N],[3,R[107],E,"A cancelled transaction",N,N],[3,R[108],E,"In FoundationDB, a transaction is a mutable snapshot of a…",N,N],[3,R[88],E,"`RangeOption` represents a query parameters for range scan…",N,N],[12,"begin",E,"The beginning of the range.",1,N],[12,"end",E,"The end of the range.",1,N],[12,"limit",E,"If non-zero, indicates the maximum number of key-value…",1,N],[12,"target_bytes",E,"If non-zero, indicates a (soft) cap on the combined number…",1,N],[12,"mode",E,"One of the options::StreamingMode values indicating how…",1,N],[12,"reverse",E,"If true, key-value pairs will be returned in reverse…",1,N],[5,"boot",E,"Initialize the FoundationDB Client API, this can only be…",N,[[],[[R[17],[R[16]]],[R[16]]]]],[5,"default_config_path",E,"Returns the default Fdb cluster configuration file path",N,[[],["str"]]],[0,"api",E,"Configuration of foundationDB API and Network",N,N],[3,R[89],R[61],"A Builder with which different versions of the Fdb C API…",N,N],[3,R[90],E,"A Builder with which the foundationDB network event loop…",N,N],[3,R[91],E,"A foundationDB network event loop runner",N,N],[3,R[92],E,"A condition object that can wait for the associated…",N,N],[3,R[93],E,"Allow to stop the associated and running `NetworkRunner`.",N,N],[3,R[115],E,"Stop the associated `NetworkRunner` and thread if dropped",N,N],[5,"get_max_api_version",E,"Returns the max api version of the underlying Fdb C API…",N,[[],["i32"]]],[11,"runtime_version",E,"The version of run-time behavior the API is requested to…",2,[[["self"]],["i32"]]],[11,"set_runtime_version",E,"Set the version of run-time behavior the API is requested…",2,[[["i32"]],["self"]]],[11,"build",E,"Initialize the foundationDB API and returns a…",2,[[],[[R[18]],[R[17],[R[18]]]]]],[11,R[22],E,"Set network options.",3,[[[R[73]]],[R[17]]]],[11,"build",E,"Finalizes the initialization of the Network",3,[[],[R[17]]]],[11,"boot",E,"Finalizes the initialization of the Network and starts it…",3,[[],[[R[16]],[R[17],[R[16]]]]]],[11,"run",E,"Start the foundationDB network event loop in the current…",4,[[],[R[17]]]],[11,"wait",E,"Wait for the associated `NetworkRunner` to actually run.",5,[[],["networkstop"]]],[11,"stop",E,"Signals the event loop invoked by `Network::run` to…",6,[[],[R[17]]]],[11,"new",R[19],"Create a database for the given configuration path if any,…",7,[[[R[50],["str"]],["str"]],[[R[20]],[R[17],[R[20]]]]]],[11,"from_path",E,R[21],7,[[["str"]],[[R[20]],[R[17],[R[20]]]]]],[11,R[78],E,"Create a database for the default configuration path",7,[[],[[R[20]],[R[17],[R[20]]]]]],[11,"new_compat",E,R[21],7,[[["str"],[R[50],["str"]]]]],[11,R[22],E,"Called to set an option an on `Database`.",7,[[[R[74]],["self"]],[R[17]]]],[11,"create_trx",E,"Creates a new transaction on the given database.",7,[[["self"]],[[R[23]],[R[17],[R[23]]]]]],[11,R[59],E,"`transact` returns a future which retries on error. It…",7,[[["self"],["f"],[R[24]]]]],[11,"transact_boxed",E,E,7,[[[R[24]],["self"],["d"],["f"]]]],[11,"transact_boxed_local",E,E,7,[[[R[24]],["self"],["d"],["f"]]]],[11,"idempotent",E,"An idempotent TransactOption",0,[[],["self"]]],[11,"from_code",E,"Converts from a raw foundationDB error code",8,[[[R[119]]],["self"]]],[11,"message",E,E,8,[[],["str"]]],[11,"is_maybe_committed",E,"Indicates the transaction may have succeeded, though not…",8,[[],["bool"]]],[11,"is_retryable",E,"Indicates the operations in the transactions should be…",8,[[],["bool"]]],[11,"is_retryable_not_committed",E,"Indicates the transaction has not committed, though in a…",8,[[],["bool"]]],[11,"code",E,"Raw foundationdb error code",8,[[],["i32"]]],[0,"future",E,"Most functions in the FoundationDB API are asynchronous,…",N,N],[3,"FdbSlice",R[62],"A slice of bytes owned by a foundationDB future",N,N],[3,R[116],E,"A slice of addresses owned by a foundationDB future",N,N],[3,R[117],E,"An address owned by a foundationDB future",N,N],[3,R[95],E,"An slice of keyvalues owned by a foundationDB future",N,N],[3,R[118],E,"An iterator of keyvalues owned by a foundationDB future",N,N],[3,"FdbValue",E,"A keyvalue you can own",N,N],[3,R[96],E,"A keyvalue owned by a foundationDB future",N,N],[11,"more",E,"`true` if there is another range after this one",9,[[["self"]],["bool"]]],[11,"key",E,"key",10,[[["self"]]]],[11,"value",E,"value",10,[[["self"]]]],[11,"new",R[19],"Constructs a new KeySelector from the given parameters.",11,[[["i32"],["cow"],["bool"]],["self"]]],[11,"key",E,"Returns a the key that serves as the anchor for this…",11,[[["self"]]]],[11,"or_equal",E,"True if this is an `or_equal` `KeySelector`",11,[[["self"]],["bool"]]],[11,"offset",E,"Returns the key offset parameter for this `KeySelector`",11,[[["self"]],["i32"]]],[11,"last_less_than",E,R[25],11,[[["cow"],["into",["cow"]]],["self"]]],[11,"last_less_or_equal",E,R[25],11,[[["cow"],["into",["cow"]]],["self"]]],[11,"first_greater_than",E,R[26],11,[[["cow"],["into",["cow"]]],["self"]]],[11,"first_greater_or_equal",E,R[26],11,[[["cow"],["into",["cow"]]],["self"]]],[0,"options",E,"Generated configuration types for use with the various…",N,N],[4,R[98],R[64],E,N,N],[13,"LocalAddress",E,"IP:PORT",12,N],[13,"ClusterFile",E,"path to cluster file",12,N],[13,"TraceEnable",E,"path to output directory (or NULL for current working…",12,N],[13,"TraceRollSize",E,"max size of a single trace output file",12,N],[13,"TraceMaxLogsSize",E,"max total size of trace files",12,N],[13,"TraceLogGroup",E,"value of the LogGroup attribute",12,N],[13,"TraceFormat",E,"Format of trace files",12,N],[13,"Knob",E,"knob_name=knob_value",12,N],[13,"TLSPlugin",E,"file path or linker-resolved name",12,N],[13,"TLSCertBytes",E,"certificates",12,N],[13,"TLSCertPath",E,R[27],12,N],[13,"TLSKeyBytes",E,"key",12,N],[13,"TLSKeyPath",E,R[27],12,N],[13,"TLSVerifyPeers",E,"verification pattern",12,N],[13,"BuggifyEnable",E,E,12,N],[13,"BuggifyDisable",E,E,12,N],[13,"BuggifySectionActivatedProbability",E,R[28],12,N],[13,"BuggifySectionFiredProbability",E,R[28],12,N],[13,"TLSCaBytes",E,"ca bundle",12,N],[13,"TLSCaPath",E,R[27],12,N],[13,"TLSPassword",E,"key passphrase",12,N],[13,"DisableMultiVersionClientApi",E,"Disables the multi-version client API and instead uses the…",12,N],[13,"CallbacksOnExternalThreads",E,"If set, callbacks from external client libraries can be…",12,N],[13,"ExternalClientLibrary",E,"path to client library",12,N],[13,"ExternalClientDirectory",E,"path to directory containing client libraries",12,N],[13,"DisableLocalClient",E,"Prevents connections through the local client, allowing…",12,N],[13,"DisableClientStatisticsLogging",E,"Disables logging of client statistics, such as sampled…",12,N],[13,"EnableSlowTaskProfiling",E,"Enables debugging feature to perform slow task profiling.…",12,N],[4,R[99],E,E,N,N],[13,"LocationCacheSize",E,"Max location cache entries",13,N],[13,"MaxWatches",E,"Max outstanding watches",13,N],[13,"MachineId",E,R[29],13,N],[13,"DatacenterId",E,R[29],13,N],[13,"TransactionTimeout",E,R[31],13,N],[13,"TransactionRetryLimit",E,R[32],13,N],[13,"TransactionMaxRetryDelay",E,R[33],13,N],[13,R[34],E,R[35],13,N],[13,R[36],E,R[37],13,N],[4,R[100],E,E,N,N],[13,"CausalWriteRisky",E,"The transaction, if not self-conflicting, may be committed…",14,N],[13,"CausalReadRisky",E,"The read version will be committed, and usually will be…",14,N],[13,"CausalReadDisable",E,E,14,N],[13,"NextWriteNoWriteConflictRange",E,"The next write performed on this transaction will not…",14,N],[13,"ReadYourWritesDisable",E,"Reads performed by a transaction will not see any prior…",14,N],[13,"ReadAheadDisable",E,R[30],14,N],[13,"DurabilityDatacenter",E,E,14,N],[13,"DurabilityRisky",E,E,14,N],[13,"DurabilityDevNullIsWebScale",E,R[30],14,N],[13,"PrioritySystemImmediate",E,"Specifies that this transaction should be treated as…",14,N],[13,"PriorityBatch",E,"Specifies that this transaction should be treated as low…",14,N],[13,"InitializeNewDatabase",E,"This is a write-only transaction which sets the initial…",14,N],[13,"AccessSystemKeys",E,"Allows this transaction to read and modify system keys…",14,N],[13,"ReadSystemKeys",E,"Allows this transaction to read system keys (those that…",14,N],[13,"DebugRetryLogging",E,"Optional transaction name",14,N],[13,"TransactionLoggingEnable",E,"String identifier to be used in the logs when tracing this…",14,N],[13,"DebugTransactionIdentifier",E,"String identifier to be used when tracing or profiling…",14,N],[13,"LogTransaction",E,"Enables tracing for this transaction and logs results to…",14,N],[13,"Timeout",E,R[31],14,N],[13,"RetryLimit",E,R[32],14,N],[13,"MaxRetryDelay",E,R[33],14,N],[13,R[34],E,R[35],14,N],[13,R[36],E,R[37],14,N],[13,"LockAware",E,"The transaction can read and write to locked databases,…",14,N],[13,"UsedDuringCommitProtectionDisable",E,"By default, operations that are performed on a transaction…",14,N],[13,"ReadLockAware",E,"The transaction can read from locked databases.",14,N],[13,"UseProvisionalProxies",E,"This option should only be used by tools which change the…",14,N],[4,R[101],E,E,N,N],[13,"WantAll",E,"Client intends to consume the entire range and would like…",15,N],[13,"Iterator",E,"The default. The client doesn't know how much of the range…",15,N],[13,"Exact",E,"Infrequently used. The client has passed a specific row…",15,N],[13,"Small",E,"Infrequently used. Transfer data in batches small enough…",15,N],[13,"Medium",E,"Infrequently used. Transfer data in batches sized in…",15,N],[13,"Large",E,"Infrequently used. Transfer data in batches large enough…",15,N],[13,"Serial",E,"Transfer data in batches large enough that an individual…",15,N],[4,R[102],E,E,N,N],[13,"Add",E,"addend",16,N],[13,"And",E,R[38],16,N],[13,"BitAnd",E,R[38],16,N],[13,"Or",E,R[39],16,N],[13,"BitOr",E,R[39],16,N],[13,"Xor",E,R[40],16,N],[13,"BitXor",E,R[40],16,N],[13,"AppendIfFits",E,"value to append to the database value",16,N],[13,"Max",E,R[41],16,N],[13,"Min",E,R[41],16,N],[13,"SetVersionstampedKey",E,"value to which to set the transformed key",16,N],[13,"SetVersionstampedValue",E,"value to versionstamp and set",16,N],[13,"ByteMin",E,R[41],16,N],[13,"ByteMax",E,R[41],16,N],[13,"CompareAndClear",E,"Value to compare with",16,N],[4,R[103],E,E,N,N],[13,"Read",E,"Used to add a read conflict range",17,N],[13,"Write",E,"Used to add a write conflict range",17,N],[4,R[104],E,E,N,N],[13,"Retryable",E,"Returns `true` if the error indicates the operations in…",18,N],[13,"MaybeCommitted",E,"Returns `true` if the error indicates the transaction may…",18,N],[13,"RetryableNotCommitted",E,"Returns `true` if the error indicates the transaction has…",18,N],[11,"code",E,E,12,[[["self"]],["fdbnetworkoption"]]],[11,"apply",E,E,12,[[["self"]],[R[17]]]],[11,"code",E,E,13,[[["self"]],["fdbdatabaseoption"]]],[11,"apply",E,E,13,[[["self"]],[R[17]]]],[11,"code",E,E,14,[[["self"]],["fdbtransactionoption"]]],[11,"apply",E,E,14,[[["self"]],[R[17]]]],[11,"code",E,E,15,[[["self"]],["fdbstreamingmode"]]],[11,"code",E,E,16,[[["self"]],["fdbmutationtype"]]],[11,"code",E,E,17,[[["self"]],["fdbconflictrangetype"]]],[11,"code",E,E,18,[[["self"]],["fdberrorpredicate"]]],[11,"committed_version",R[19],"Retrieves the database version number at which a given…",19,[[["self"]],[[R[17],["i64"]],["i64"]]]],[11,"reset",E,R[42],19,[[],[R[23]]]],[11,R[46],E,R[47],20,[[]]],[11,"reset",E,R[42],20,[[],[R[23]]]],[11,"reset",E,R[42],21,[[],[R[23]]]],[11,"rev",E,"Reverses the range direction.",1,[[],["self"]]],[11,"next_range",E,E,1,[[["fdbvalues"]],[R[50]]]],[11,R[22],E,"Called to set an option on an FDBTransaction.",22,[[["self"],[R[75]]],[R[17]]]],[11,"set",E,R[43],22,[[["self"]]]],[11,"clear",E,R[43],22,[[["self"]]]],[11,"get",E,"Reads a value from the database snapshot represented by…",22,[[["self"],["bool"]]]],[11,"atomic_op",E,R[43],22,[[["self"],[R[76]]]]],[11,"get_key",E,"Resolves a key selector against the keys in the database…",22,[[[R[72]],["self"],["bool"]]]],[11,"get_ranges",E,R[44],22,[[[R[45]],["self"],["bool"]]]],[11,"get_ranges_keyvalues",E,R[44],22,[[[R[45]],["self"],["bool"]]]],[11,"get_range",E,R[44],22,[[["usize"],[R[45]],["self"],["bool"]]]],[11,"clear_range",E,R[43],22,[[["self"]]]],[11,"commit",E,"Attempts to commit the sets and clears previously applied…",22,[[]]],[11,R[46],E,R[47],22,[[[R[60]]]]],[11,"cancel",E,"Cancels the transaction. All pending or future uses of the…",22,[[],[R[71]]]],[11,"get_addresses_for_key",E,"Returns a list of public network addresses as strings, one…",22,[[["self"]]]],[11,"watch",E,"A watch's behavior is relative to the transaction that…",22,[[["self"]]]],[11,"get_versionstamp",E,"Returns an FDBFuture which will be set to the versionstamp…",22,[[["self"]]]],[11,"get_read_version",E,"The transaction obtains a snapshot read version…",22,[[["self"]]]],[11,"set_read_version",E,"Sets the snapshot read version used by a transaction.",22,[[["i64"],["self"]]]],[11,"reset",E,"Reset transaction to its initial state.",22,[[["self"]]]],[11,"add_conflict_range",E,"Adds a conflict range to a transaction without performing…",22,[[["self"],[R[77]]],[R[17]]]],[0,"tuple",E,"Implementation of the official tuple layer typecodes",N,N],[3,"Uuid",R[49],"A Universally Unique Identifier (UUID).",N,N],[3,"Subspace",E,"Represents a well-defined region of keyspace in a…",N,N],[3,R[48],E,E,N,N],[3,R[112],E,"Tracks the depth of a Tuple decoding chain",N,N],[3,"Bytes",E,"Represent a sequence of bytes (i.e. &[u8])",N,N],[12,"0",E,E,23,N],[4,"Element",E,E,N,N],[13,"Nil",E,E,24,N],[13,"Bytes",E,E,24,N],[13,"String",E,E,24,N],[13,"Tuple",E,E,24,N],[13,"Int",E,E,24,N],[13,"Float",E,E,24,N],[13,"Double",E,E,24,N],[13,"Bool",E,E,24,N],[13,"Uuid",E,E,24,N],[13,R[48],E,E,24,N],[4,R[52],E,"A packing/unpacking error",N,N],[13,"Message",E,E,25,N],[13,"IoError",E,E,25,N],[13,"TrailingBytes",E,E,25,N],[13,"MissingBytes",E,E,25,N],[13,"BadStringFormat",E,E,25,N],[13,"BadCode",E,E,25,N],[12,"found","foundationdb::tuple::PackError",E,25,N],[12,"expected",E,E,25,N],[13,"BadPrefix",R[49],E,25,N],[13,"BadUuid",E,E,25,N],[5,"pack",E,"Pack value and returns the packed buffer",N,[[[T]],[["vec",["u8"]],["u8"]]]],[5,"pack_into",E,"Pack value into the given buffer",N,[[["vec"],[T]]]],[5,R[69],E,"Unpack input",N,[[],[[R[54]],[R[55]]]]],[11,R[58],E,E,24,[[],[R[80]]]],[11,"as_bool",E,E,24,[[["self"]],[[R[50],["bool"]],["bool"]]]],[11,"as_i64",E,E,24,[[["self"]],[[R[50],["i64"]],["i64"]]]],[11,"as_str",E,E,24,[[["self"]],[[R[50],["str"]],["str"]]]],[11,R[56],E,E,24,[[["self"]],[["bytes"],[R[50],["bytes"]]]]],[11,"as_tuple",E,E,24,[[["self"]],[R[50]]]],[0,"hca",E,"The directory layer offers subspace indirection, where…",N,N],[3,R[109],R[66],"Represents a High Contention Allocator for a given subspace",N,N],[4,"HcaError",E,E,N,N],[13,R[51],E,E,26,N],[13,R[52],E,E,26,N],[13,"InvalidDirectoryLayerMetadata",E,E,26,N],[13,"PoisonError",E,E,26,N],[11,"new",E,"Constructs an allocator that will use the input subspace…",27,[[[R[53]]],["highcontentionallocator"]]],[11,"allocate",E,"Returns a byte string that 1) has never and will never be…",27,[[[R[23]],["self"]]]],[11,"all",R[49],"`all` returns the Subspace corresponding to all keys in a…",28,[[],[R[53]]]],[11,R[82],E,"`from_bytes` returns a new Subspace from the provided bytes.",28,[[],["self"]]],[11,R[53],E,"Returns a new Subspace whose prefix extends this Subspace…",28,[[[T],["self"]],["self"]]],[11,"bytes",E,"`bytes` returns the literal bytes of the prefix of this…",28,[[["self"]]]],[11,"pack",E,"Returns the key encoding the specified Tuple with the…",28,[[[T],["self"]],[["vec",["u8"]],["u8"]]]],[11,R[69],E,"`unpack` returns the Tuple encoded by the given key with…",28,[[["self"]],[[R[54]],[R[55]]]]],[11,"is_start_of",E,"`is_start_of` returns true if the provided key starts with…",28,[[["self"]],["bool"]]],[11,"range",E,"`range` returns first and last key of given Subspace",28,[[["self"]]]],[11,"clear_subspace_range",R[19],E,22,[[[R[53]],["self"]]]],[11,"incomplete",R[49],E,29,[[["u16"]],["self"]]],[11,"complete",E,E,29,[[["u16"]],["self"]]],[11,"transaction_version",E,E,29,[[["self"]]]],[11,"user_version",E,E,29,[[["self"]],["u16"]]],[11,"is_complete",E,E,29,[[["self"]],["bool"]]],[11,R[56],E,E,29,[[["self"]]]],[11,"count_incomplete_versionstamp",E,E,24,[[["self"]],["usize"]]],[6,"PackResult",E,"Alias for `Result<..., tuple::Error>`",N,N],[8,R[110],E,"A type that can be packed",N,N],[10,"pack",E,E,30,[[["w"],[R[57]],["self"]],[R[1]]]],[11,R[84],E,E,30,[[["w"],["self"]],[R[1]]]],[11,R[85],E,E,30,[[["self"]],[["vec",["u8"]],["u8"]]]],[8,R[111],E,"A type that can be unpacked",N,N],[10,R[69],E,E,31,[[[R[57]]],[R[54]]]],[11,R[86],E,E,31,[[],[R[54]]]],[11,"increment",E,"Increment the depth by one, this be called when calling…",32,[[],["self"]]],[11,"depth",E,"Returns the current depth in any recursive tuple…",32,[[],["usize"]]],[11,R[58],E,E,23,[[],[["vec",["u8"]],["u8"]]]],[6,"FdbResult",R[19],"Alias for `Result<..., FdbError>`",N,N],[8,R[113],E,E,N,N],[16,"Item",E,E,33,N],[16,"Error",E,E,33,N],[16,"Future",E,E,33,N],[10,R[59],E,E,33,[[[R[23]]]]],[8,R[114],E,"A trait that must be implemented to use…",N,N],[10,R[68],E,E,34,[[],[[R[1],[R[60]]],[R[60]]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[4],E,E,7,[[[U]],[R[1]]]],[11,R[5],E,E,7,[[],[R[1]]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[["self"]],[T]]],[11,R[3],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[1]]]],[11,R[5],E,E,0,[[],[R[1]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[2],E,E,8,[[["self"]],[T]]],[11,R[3],E,E,8,[[["self"],[T]]]],[11,R[65],E,E,8,[[["self"]],[R[0]]]],[11,R[4],E,E,8,[[[U]],[R[1]]]],[11,R[5],E,E,8,[[],[R[1]]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[2],E,E,11,[[["self"]],[T]]],[11,R[3],E,E,11,[[["self"],[T]]]],[11,R[4],E,E,11,[[[U]],[R[1]]]],[11,R[5],E,E,11,[[],[R[1]]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[4],E,E,19,[[[U]],[R[1]]]],[11,R[5],E,E,19,[[],[R[1]]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[R[9]]]],[11,"vzip",E,E,19,[[],["v"]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[4],E,E,20,[[[U]],[R[1]]]],[11,R[5],E,E,20,[[],[R[1]]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[R[9]]]],[11,"vzip",E,E,20,[[],["v"]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[4],E,E,21,[[[U]],[R[1]]]],[11,R[5],E,E,21,[[],[R[1]]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[R[9]]]],[11,"vzip",E,E,21,[[],["v"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[4],E,E,22,[[[U]],[R[1]]]],[11,R[5],E,E,22,[[],[R[1]]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[R[9]]]],[11,"vzip",E,E,22,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[["self"]],[T]]],[11,R[3],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[1]]]],[11,R[5],E,E,1,[[],[R[1]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",R[61],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[1]]]],[11,R[5],E,E,2,[[],[R[1]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[1]]]],[11,R[5],E,E,3,[[],[R[1]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[1]]]],[11,R[5],E,E,4,[[],[R[1]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[1]]]],[11,R[5],E,E,5,[[],[R[1]]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[1]]]],[11,R[5],E,E,6,[[],[R[1]]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[4],E,E,35,[[[U]],[R[1]]]],[11,R[5],E,E,35,[[],[R[1]]]],[11,R[6],E,E,35,[[["self"]],[T]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[8],E,E,35,[[["self"]],[R[9]]]],[11,"vzip",E,E,35,[[],["v"]]],[11,"into",R[62],E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[4],E,E,36,[[[U]],[R[1]]]],[11,R[5],E,E,36,[[],[R[1]]]],[11,R[6],E,E,36,[[["self"]],[T]]],[11,R[7],E,E,36,[[["self"]],[T]]],[11,R[8],E,E,36,[[["self"]],[R[9]]]],[11,"vzip",E,E,36,[[],["v"]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[4],E,E,37,[[[U]],[R[1]]]],[11,R[5],E,E,37,[[],[R[1]]]],[11,R[6],E,E,37,[[["self"]],[T]]],[11,R[7],E,E,37,[[["self"]],[T]]],[11,R[8],E,E,37,[[["self"]],[R[9]]]],[11,"vzip",E,E,37,[[],["v"]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[4],E,E,38,[[[U]],[R[1]]]],[11,R[5],E,E,38,[[],[R[1]]]],[11,R[6],E,E,38,[[["self"]],[T]]],[11,R[7],E,E,38,[[["self"]],[T]]],[11,R[8],E,E,38,[[["self"]],[R[9]]]],[11,"vzip",E,E,38,[[],["v"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[63],E,E,9,[[],["i"]]],[11,R[4],E,E,9,[[[U]],[R[1]]]],[11,R[5],E,E,9,[[],[R[1]]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[63],E,E,39,[[],["i"]]],[11,R[4],E,E,39,[[[U]],[R[1]]]],[11,R[5],E,E,39,[[],[R[1]]]],[11,R[6],E,E,39,[[["self"]],[T]]],[11,R[7],E,E,39,[[["self"]],[T]]],[11,R[8],E,E,39,[[["self"]],[R[9]]]],[11,"vzip",E,E,39,[[],["v"]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[4],E,E,40,[[[U]],[R[1]]]],[11,R[5],E,E,40,[[],[R[1]]]],[11,R[6],E,E,40,[[["self"]],[T]]],[11,R[7],E,E,40,[[["self"]],[T]]],[11,R[8],E,E,40,[[["self"]],[R[9]]]],[11,"vzip",E,E,40,[[],["v"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[4],E,E,10,[[[U]],[R[1]]]],[11,R[5],E,E,10,[[],[R[1]]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,"into",R[64],E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[2],E,E,12,[[["self"]],[T]]],[11,R[3],E,E,12,[[["self"],[T]]]],[11,R[4],E,E,12,[[[U]],[R[1]]]],[11,R[5],E,E,12,[[],[R[1]]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[2],E,E,13,[[["self"]],[T]]],[11,R[3],E,E,13,[[["self"],[T]]]],[11,R[4],E,E,13,[[[U]],[R[1]]]],[11,R[5],E,E,13,[[],[R[1]]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[2],E,E,14,[[["self"]],[T]]],[11,R[3],E,E,14,[[["self"],[T]]]],[11,R[4],E,E,14,[[[U]],[R[1]]]],[11,R[5],E,E,14,[[],[R[1]]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[2],E,E,15,[[["self"]],[T]]],[11,R[3],E,E,15,[[["self"],[T]]]],[11,R[4],E,E,15,[[[U]],[R[1]]]],[11,R[5],E,E,15,[[],[R[1]]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,"vzip",E,E,15,[[],["v"]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[2],E,E,16,[[["self"]],[T]]],[11,R[3],E,E,16,[[["self"],[T]]]],[11,R[4],E,E,16,[[[U]],[R[1]]]],[11,R[5],E,E,16,[[],[R[1]]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[R[9]]]],[11,"vzip",E,E,16,[[],["v"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[2],E,E,17,[[["self"]],[T]]],[11,R[3],E,E,17,[[["self"],[T]]]],[11,R[4],E,E,17,[[[U]],[R[1]]]],[11,R[5],E,E,17,[[],[R[1]]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,"vzip",E,E,17,[[],["v"]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[2],E,E,18,[[["self"]],[T]]],[11,R[3],E,E,18,[[["self"],[T]]]],[11,R[4],E,E,18,[[[U]],[R[1]]]],[11,R[5],E,E,18,[[],[R[1]]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,"vzip",E,E,18,[[],["v"]]],[11,"into",R[49],E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[2],E,E,41,[[["self"]],[T]]],[11,R[3],E,E,41,[[["self"],[T]]]],[11,R[65],E,E,41,[[["self"]],[R[0]]]],[11,R[4],E,E,41,[[[U]],[R[1]]]],[11,R[5],E,E,41,[[],[R[1]]]],[11,R[6],E,E,41,[[["self"]],[T]]],[11,R[7],E,E,41,[[["self"]],[T]]],[11,R[8],E,E,41,[[["self"]],[R[9]]]],[11,"vzip",E,E,41,[[],["v"]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[2],E,E,28,[[["self"]],[T]]],[11,R[3],E,E,28,[[["self"],[T]]]],[11,R[4],E,E,28,[[[U]],[R[1]]]],[11,R[5],E,E,28,[[],[R[1]]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[R[9]]]],[11,"vzip",E,E,28,[[],["v"]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[2],E,E,29,[[["self"]],[T]]],[11,R[3],E,E,29,[[["self"],[T]]]],[11,R[4],E,E,29,[[[U]],[R[1]]]],[11,R[5],E,E,29,[[],[R[1]]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[R[9]]]],[11,"vzip",E,E,29,[[],["v"]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[2],E,E,32,[[["self"]],[T]]],[11,R[3],E,E,32,[[["self"],[T]]]],[11,R[4],E,E,32,[[[U]],[R[1]]]],[11,R[5],E,E,32,[[],[R[1]]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[R[9]]]],[11,"vzip",E,E,32,[[],["v"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[2],E,E,23,[[["self"]],[T]]],[11,R[3],E,E,23,[[["self"],[T]]]],[11,R[65],E,E,23,[[["self"]],[R[0]]]],[11,R[4],E,E,23,[[[U]],[R[1]]]],[11,R[5],E,E,23,[[],[R[1]]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[R[9]]]],[11,"vzip",E,E,23,[[],["v"]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[2],E,E,24,[[["self"]],[T]]],[11,R[3],E,E,24,[[["self"],[T]]]],[11,R[4],E,E,24,[[[U]],[R[1]]]],[11,R[5],E,E,24,[[],[R[1]]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[R[9]]]],[11,"vzip",E,E,24,[[],["v"]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[65],E,E,25,[[["self"]],[R[0]]]],[11,R[4],E,E,25,[[[U]],[R[1]]]],[11,R[5],E,E,25,[[],[R[1]]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[R[9]]]],[11,"vzip",E,E,25,[[],["v"]]],[11,"into",R[66],E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[4],E,E,27,[[[U]],[R[1]]]],[11,R[5],E,E,27,[[],[R[1]]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[R[9]]]],[11,"vzip",E,E,27,[[],["v"]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[4],E,E,26,[[[U]],[R[1]]]],[11,R[5],E,E,26,[[],[R[1]]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[R[9]]]],[11,"vzip",E,E,26,[[],["v"]]],[11,"cmp",R[49],E,41,[[["self"],["uuid"]],[R[67]]]],[11,"eq",E,E,41,[[["self"],["uuid"]],["bool"]]],[11,"ne",E,E,41,[[["self"],["uuid"]],["bool"]]],[11,"fmt",E,E,41,[[[R[12]],["self"]],[["error"],[R[1],["error"]]]]],[11,"hash",E,E,41,[[["self"],["__h"]]]],[11,R[81],E,E,41,[[["self"],["uuid"]],[[R[50],[R[67]]],[R[67]]]]],[11,"lt",E,E,41,[[["self"],["uuid"]],["bool"]]],[11,"le",E,E,41,[[["self"],["uuid"]],["bool"]]],[11,"gt",E,E,41,[[["self"],["uuid"]],["bool"]]],[11,"ge",E,E,41,[[["self"],["uuid"]],["bool"]]],[11,"fmt",E,E,41,[[[R[12]],["self"]],[["error"],[R[1],["error"]]]]],[11,R[78],E,E,41,[[],["uuid"]]],[11,"fmt",E,E,41,[[[R[12]],["self"]],[["error"],[R[1],["error"]]]]],[11,"fmt",E,E,41,[[[R[12]],["self"]],[["error"],[R[1],["error"]]]]],[11,"from_str",E,E,41,[[["str"]],[[R[1],["uuid"]],["uuid"]]]],[11,"clone",E,E,41,[[["self"]],["uuid"]]],[11,R[68],R[19],E,8,[[],[[R[1],[R[60]]],[R[60]]]]],[11,R[68],R[66],E,26,[[],[[R[1],[R[60]]],[R[60]]]]],[11,"pack",R[49],E,23,[[["w"],[R[57]],["self"]],[R[1]]]],[11,"pack",E,E,24,[[["w"],[R[57]],["self"]],[R[1]]]],[11,"pack",E,E,29,[[["w"],[R[57]],["self"]],[R[1]]]],[11,"pack",E,E,41,[[["w"],[R[57]],["self"]],[R[1]]]],[11,R[69],E,E,23,[[[R[57]]],[R[54]]]],[11,R[69],E,E,24,[[[R[57]]],[R[54]]]],[11,R[69],E,E,29,[[[R[57]]],[R[54]]]],[11,R[69],E,E,41,[[[R[57]]],[R[54]]]],[11,"drop",R[61],E,35,[[["self"]]]],[11,"drop",R[19],E,7,[[["self"]]]],[11,"drop",E,E,22,[[["self"]]]],[11,R[70],R[62],E,36,[[["self"]]]],[11,R[70],E,E,37,[[["self"]]]],[11,R[70],E,E,38,[[["self"]],["cstr"]]],[11,R[70],E,E,9,[[["self"]]]],[11,R[70],E,E,40,[[["self"]],["fdbkeyvalue"]]],[11,R[70],R[49],E,23,[[["self"]]]],[11,"into",E,E,29,[[]]],[11,"from",R[19],E,22,[[["transactioncommitted"]],[R[23]]]],[11,"from",E,E,8,[[["transactioncommiterror"]],[R[60]]]],[11,"from",E,E,22,[[[R[71]]],[R[23]]]],[11,"from",E,E,1,[[],["self"]]],[11,"from",E,E,1,[[],["self"]]],[11,"from",E,E,1,[[],["self"]]],[11,"from",R[66],E,26,[[[R[60]]],["self"]]],[11,"from",E,E,26,[[["packerror"]],["self"]]],[11,"from",E,E,26,[[["poisonerror"]],["self"]]],[11,"from",R[49],E,28,[[["e"]],["self"]]],[11,"from",R[19],E,1,[[[R[53]]],["self"]]],[11,"from",R[49],E,29,[[],["self"]]],[11,"from",E,E,25,[[["error"]],["self"]]],[11,"from",E,E,23,[[],["self"]]],[11,"from",E,E,23,[[["vec",["u8"]],["u8"]],["self"]]],[11,"from",E,E,23,[[["str"]],["self"]]],[11,"from",E,E,23,[[[R[0]]],["self"]]],[11,"next",R[62],E,39,[[["self"]],[R[50]]]],[11,"nth",E,E,39,[[["self"],["usize"]],[R[50]]]],[11,"size_hint",E,E,39,[[["self"]]]],[11,R[63],E,E,9,[[]]],[11,"next_back",E,E,39,[[["self"]],[R[50]]]],[11,"nth_back",E,E,39,[[["self"],["usize"]],[R[50]]]],[11,"clone",R[19],E,0,[[["self"]],[R[24]]]],[11,"clone",E,E,8,[[["self"]],[R[60]]]],[11,"clone",E,E,11,[[["self"]],[R[72]]]],[11,"clone",R[64],E,12,[[["self"]],[R[73]]]],[11,"clone",E,E,13,[[["self"]],[R[74]]]],[11,"clone",E,E,14,[[["self"]],[R[75]]]],[11,"clone",E,E,15,[[["self"]],[R[120]]]],[11,"clone",E,E,16,[[["self"]],[R[76]]]],[11,"clone",E,E,17,[[["self"]],[R[77]]]],[11,"clone",E,E,18,[[["self"]],["errorpredicate"]]],[11,"clone",R[19],E,1,[[["self"]],[R[45]]]],[11,"clone",R[49],E,24,[[["self"]],[R[80]]]],[11,"clone",E,E,28,[[["self"]],[R[53]]]],[11,"clone",E,E,29,[[["self"]],[R[79]]]],[11,"clone",E,E,32,[[["self"]],[R[57]]]],[11,"clone",E,E,23,[[["self"]],["bytes"]]],[11,R[78],R[61],E,2,[[],["self"]]],[11,R[78],R[19],E,0,[[],[R[24]]]],[11,R[78],E,E,1,[[],["self"]]],[11,"cmp",R[49],E,29,[[[R[79]],["self"]],[R[67]]]],[11,"cmp",E,E,23,[[["self"],["bytes"]],[R[67]]]],[11,"eq",E,E,24,[[[R[80]],["self"]],["bool"]]],[11,"ne",E,E,24,[[[R[80]],["self"]],["bool"]]],[11,"eq",E,E,29,[[[R[79]],["self"]],["bool"]]],[11,"ne",E,E,29,[[[R[79]],["self"]],["bool"]]],[11,"eq",E,E,23,[[["self"],["bytes"]],["bool"]]],[11,"ne",E,E,23,[[["self"],["bytes"]],["bool"]]],[11,R[81],E,E,29,[[[R[79]],["self"]],[[R[50],[R[67]]],[R[67]]]]],[11,"lt",E,E,29,[[[R[79]],["self"]],["bool"]]],[11,"le",E,E,29,[[[R[79]],["self"]],["bool"]]],[11,"gt",E,E,29,[[[R[79]],["self"]],["bool"]]],[11,"ge",E,E,29,[[[R[79]],["self"]],["bool"]]],[11,R[81],E,E,23,[[["self"],["bytes"]],[[R[50],[R[67]]],[R[67]]]]],[11,"lt",E,E,23,[[["self"],["bytes"]],["bool"]]],[11,"le",E,E,23,[[["self"],["bytes"]],["bool"]]],[11,"gt",E,E,23,[[["self"],["bytes"]],["bool"]]],[11,"ge",E,E,23,[[["self"],["bytes"]],["bool"]]],[11,"fmt",R[19],E,8,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",R[49],E,25,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",E,E,23,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",R[19],E,8,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",E,E,11,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",R[64],E,12,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",E,E,13,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",E,E,14,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",E,E,15,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",E,E,16,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",E,E,17,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",E,E,18,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",R[19],E,20,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",R[49],E,24,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",R[66],E,26,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",E,E,27,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",R[49],E,28,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",E,E,29,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",E,E,25,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",E,E,23,[[["self"],[R[12]]],[R[1]]]],[11,"deref",R[62],E,36,[[["self"]]]],[11,"deref",E,E,37,[[["self"]]]],[11,"deref",E,E,38,[[["self"]],["cstr"]]],[11,"deref",E,E,9,[[["self"]]]],[11,"deref",E,E,40,[[["self"]]]],[11,"deref",R[19],E,20,[[["self"]],[R[60]]]],[11,"deref",R[49],E,23,[[["self"]]]],[11,"hash",E,E,29,[[["self"],["__h"]]]],[11,"hash",E,E,23,[[["self"],["__h"]]]],[11,"nil",E,"The 'nil UUID'.",41,[[],["uuid"]]],[11,"from_fields",E,"Creates a UUID from four field values in big-endian order.",41,[[["u16"],["u32"]],[["uuid"],["error"],[R[1],["uuid","error"]]]]],[11,"from_fields_le",E,"Creates a UUID from four field values in little-endian…",41,[[["u16"],["u32"]],[["uuid"],["error"],[R[1],["uuid","error"]]]]],[11,"from_u128",E,"Creates a UUID from a 128bit value in big-endian order.",41,[[["u128"]],["uuid"]]],[11,"from_u128_le",E,"Creates a UUID from a 128bit value in little-endian order.",41,[[["u128"]],["uuid"]]],[11,"from_slice",E,R[83],41,[[],[["uuid"],["error"],[R[1],["uuid","error"]]]]],[11,R[82],E,R[83],41,[[],["uuid"]]],[11,"parse_str",E,"Parses a `Uuid` from a string of hexadecimal digits with…",41,[[["str"]],[["uuid"],["error"],[R[1],["uuid","error"]]]]],[11,"to_hyphenated",E,"Get a [`Hyphenated`] formatter.",41,[[],["hyphenated"]]],[11,"to_hyphenated_ref",E,"Get a borrowed [`HyphenatedRef`] formatter.",41,[[["self"]],["hyphenatedref"]]],[11,"to_simple",E,"Get a [`Simple`] formatter.",41,[[],["simple"]]],[11,"to_simple_ref",E,"Get a borrowed [`SimpleRef`] formatter.",41,[[["self"]],["simpleref"]]],[11,"to_urn",E,"Get a [`Urn`] formatter.",41,[[],["urn"]]],[11,"to_urn_ref",E,"Get a borrowed [`UrnRef`] formatter.",41,[[["self"]],["urnref"]]],[18,"NAMESPACE_DNS",E,"UUID namespace for Domain Name System (DNS).",41,N],[18,"NAMESPACE_OID",E,"UUID namespace for ISO Object Identifiers (OIDs).",41,N],[18,"NAMESPACE_URL",E,"UUID namespace for Uniform Resource Locators (URLs).",41,N],[18,"NAMESPACE_X500",E,"UUID namespace for X.500 Distinguished Names (DNs).",41,N],[11,"get_variant",E,"Returns the variant of the UUID structure.",41,[[["self"]],[[R[50],["variant"]],["variant"]]]],[11,"get_version_num",E,"Returns the version number of the UUID.",41,[[["self"]],["usize"]]],[11,"get_version",E,"Returns the version of the UUID.",41,[[["self"]],[["version"],[R[50],["version"]]]]],[11,"as_fields",E,"Returns the four field values of the UUID in big-endian…",41,[[["self"]]]],[11,"to_fields_le",E,"Returns the four field values of the UUID in little-endian…",41,[[["self"]]]],[11,"as_u128",E,"Returns a 128bit value containing the UUID data.",41,[[["self"]],["u128"]]],[11,"to_u128_le",E,"Returns a 128bit little-endian value containing the UUID…",41,[[["self"]],["u128"]]],[11,R[56],E,"Returns an array of 16 octets containing the UUID data.",41,[[["self"]]]],[11,"is_nil",E,"Tests if the UUID is nil.",41,[[["self"]],["bool"]]],[11,"encode_buffer",E,"A buffer that can be used for `encode_...` calls, that is…",41,[[]]],[11,R[84],E,E,30,[[["w"],["self"]],[R[1]]]],[11,R[85],E,E,30,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[86],E,E,31,[[],[R[54]]]]],"p":[[3,R[87]],[3,R[88]],[3,R[89]],[3,R[90]],[3,R[91]],[3,R[92]],[3,R[93]],[3,R[94]],[3,R[51]],[3,R[95]],[3,R[96]],[3,R[97]],[4,R[98]],[4,R[99]],[4,R[100]],[4,R[101]],[4,R[102]],[4,R[103]],[4,R[104]],[3,R[105]],[3,R[106]],[3,R[107]],[3,R[108]],[3,"Bytes"],[4,"Element"],[4,R[52]],[4,"HcaError"],[3,R[109]],[3,"Subspace"],[3,R[48]],[8,R[110]],[8,R[111]],[3,R[112]],[8,R[113]],[8,R[114]],[3,R[115]],[3,"FdbSlice"],[3,R[116]],[3,R[117]],[3,R[118]],[3,"FdbValue"],[3,"Uuid"]]};
searchIndex["foundationdb_bench"]={"doc":E,"i":[],"p":[]};
searchIndex["foundationdb_gen"]={"doc":E,"i":[[5,"emit","foundationdb_gen",E,N,[[],[[R[1],[R[0],"error"]],[R[0]],["error"]]]]],"p":[]};
searchIndex["foundationdb_options_gen"]={"doc":E,"i":[],"p":[]};
searchIndex["foundationdb_sys"]={"doc":E,"i":[[3,R[10],"foundationdb_sys",E,N,N],[12,"__val",E,E,0,N],[3,R[13],E,E,N,N],[3,R[14],E,E,N,N],[3,R[15],E,E,N,N],[3,R[11],E,E,N,N],[12,"key",E,E,1,N],[12,"key_length",E,E,1,N],[12,"value",E,E,1,N],[12,"value_length",E,E,1,N],[5,"fdb_get_error",E,E,N,N],[5,"fdb_error_predicate",E,E,N,N],[5,"fdb_network_set_option",E,E,N,N],[5,"fdb_setup_network",E,E,N,N],[5,"fdb_run_network",E,E,N,N],[5,"fdb_stop_network",E,E,N,N],[5,"fdb_add_network_thread_completion_hook",E,E,N,N],[5,"fdb_future_cancel",E,E,N,N],[5,"fdb_future_release_memory",E,E,N,N],[5,"fdb_future_destroy",E,E,N,N],[5,"fdb_future_block_until_ready",E,E,N,N],[5,"fdb_future_is_ready",E,E,N,N],[5,"fdb_future_set_callback",E,E,N,N],[5,"fdb_future_get_error",E,E,N,N],[5,"fdb_future_get_version",E,E,N,N],[5,"fdb_future_get_key",E,E,N,N],[5,"fdb_future_get_value",E,E,N,N],[5,"fdb_future_get_keyvalue_array",E,E,N,N],[5,"fdb_future_get_string_array",E,E,N,N],[5,"fdb_create_database",E,E,N,N],[5,"fdb_database_destroy",E,E,N,N],[5,"fdb_database_set_option",E,E,N,N],[5,"fdb_database_create_transaction",E,E,N,N],[5,"fdb_transaction_destroy",E,E,N,N],[5,"fdb_transaction_cancel",E,E,N,N],[5,"fdb_transaction_set_option",E,E,N,N],[5,"fdb_transaction_set_read_version",E,E,N,N],[5,"fdb_transaction_get_read_version",E,E,N,N],[5,"fdb_transaction_get",E,E,N,N],[5,"fdb_transaction_get_key",E,E,N,N],[5,"fdb_transaction_get_addresses_for_key",E,E,N,N],[5,"fdb_transaction_get_range",E,E,N,N],[5,"fdb_transaction_set",E,E,N,N],[5,"fdb_transaction_atomic_op",E,E,N,N],[5,"fdb_transaction_clear",E,E,N,N],[5,"fdb_transaction_clear_range",E,E,N,N],[5,"fdb_transaction_watch",E,E,N,N],[5,"fdb_transaction_commit",E,E,N,N],[5,"fdb_transaction_get_committed_version",E,E,N,N],[5,"fdb_transaction_get_versionstamp",E,E,N,N],[5,"fdb_transaction_on_error",E,E,N,N],[5,"fdb_transaction_reset",E,E,N,N],[5,"fdb_transaction_add_conflict_range",E,E,N,N],[5,"fdb_select_api_version_impl",E,E,N,N],[5,"fdb_get_max_api_version",E,E,N,N],[5,"fdb_get_client_version",E,E,N,N],[6,"__u_char",E,E,N,N],[6,"__u_short",E,E,N,N],[6,"__u_int",E,E,N,N],[6,"__u_long",E,E,N,N],[6,"__int8_t",E,E,N,N],[6,"__uint8_t",E,E,N,N],[6,"__int16_t",E,E,N,N],[6,"__uint16_t",E,E,N,N],[6,"__int32_t",E,E,N,N],[6,"__uint32_t",E,E,N,N],[6,"__int64_t",E,E,N,N],[6,"__uint64_t",E,E,N,N],[6,"__quad_t",E,E,N,N],[6,"__u_quad_t",E,E,N,N],[6,"__intmax_t",E,E,N,N],[6,"__uintmax_t",E,E,N,N],[6,"__dev_t",E,E,N,N],[6,"__uid_t",E,E,N,N],[6,"__gid_t",E,E,N,N],[6,"__ino_t",E,E,N,N],[6,"__ino64_t",E,E,N,N],[6,"__mode_t",E,E,N,N],[6,"__nlink_t",E,E,N,N],[6,"__off_t",E,E,N,N],[6,"__off64_t",E,E,N,N],[6,"__pid_t",E,E,N,N],[6,"__clock_t",E,E,N,N],[6,"__rlim_t",E,E,N,N],[6,"__rlim64_t",E,E,N,N],[6,"__id_t",E,E,N,N],[6,"__time_t",E,E,N,N],[6,"__useconds_t",E,E,N,N],[6,"__suseconds_t",E,E,N,N],[6,"__daddr_t",E,E,N,N],[6,"__key_t",E,E,N,N],[6,"__clockid_t",E,E,N,N],[6,"__timer_t",E,E,N,N],[6,"__blksize_t",E,E,N,N],[6,"__blkcnt_t",E,E,N,N],[6,"__blkcnt64_t",E,E,N,N],[6,"__fsblkcnt_t",E,E,N,N],[6,"__fsblkcnt64_t",E,E,N,N],[6,"__fsfilcnt_t",E,E,N,N],[6,"__fsfilcnt64_t",E,E,N,N],[6,"__fsword_t",E,E,N,N],[6,"__ssize_t",E,E,N,N],[6,"__syscall_slong_t",E,E,N,N],[6,"__syscall_ulong_t",E,E,N,N],[6,"__loff_t",E,E,N,N],[6,"__caddr_t",E,E,N,N],[6,"__intptr_t",E,E,N,N],[6,"__socklen_t",E,E,N,N],[6,"__sig_atomic_t",E,E,N,N],[6,"int_least8_t",E,E,N,N],[6,"int_least16_t",E,E,N,N],[6,"int_least32_t",E,E,N,N],[6,"int_least64_t",E,E,N,N],[6,"uint_least8_t",E,E,N,N],[6,"uint_least16_t",E,E,N,N],[6,"uint_least32_t",E,E,N,N],[6,"uint_least64_t",E,E,N,N],[6,"int_fast8_t",E,E,N,N],[6,"int_fast16_t",E,E,N,N],[6,"int_fast32_t",E,E,N,N],[6,"int_fast64_t",E,E,N,N],[6,"uint_fast8_t",E,E,N,N],[6,"uint_fast16_t",E,E,N,N],[6,"uint_fast32_t",E,E,N,N],[6,"uint_fast64_t",E,E,N,N],[6,"intmax_t",E,E,N,N],[6,"uintmax_t",E,E,N,N],[6,"FDBNetworkOption",E,E,N,N],[6,"FDBDatabaseOption",E,E,N,N],[6,"FDBTransactionOption",E,E,N,N],[6,"FDBStreamingMode",E,E,N,N],[6,"FDBMutationType",E,E,N,N],[6,"FDBConflictRangeType",E,E,N,N],[6,"FDBErrorPredicate",E,E,N,N],[6,"FDBFuture",E,E,N,N],[6,"FDBDatabase",E,E,N,N],[6,"FDBTransaction",E,E,N,N],[6,R[119],E,E,N,N],[6,"fdb_bool_t",E,E,N,N],[6,"FDBKeyValue",E,E,N,N],[6,"FDBCallback",E,E,N,N],[17,"FDB_API_VERSION",E,E,N,N],[17,"_STDINT_H",E,E,N,N],[17,"_FEATURES_H",E,E,N,N],[17,"_DEFAULT_SOURCE",E,E,N,N],[17,"__USE_ISOC11",E,E,N,N],[17,"__USE_ISOC99",E,E,N,N],[17,"__USE_ISOC95",E,E,N,N],[17,"__USE_POSIX_IMPLICITLY",E,E,N,N],[17,"_POSIX_SOURCE",E,E,N,N],[17,"_POSIX_C_SOURCE",E,E,N,N],[17,"__USE_POSIX",E,E,N,N],[17,"__USE_POSIX2",E,E,N,N],[17,"__USE_POSIX199309",E,E,N,N],[17,"__USE_POSIX199506",E,E,N,N],[17,"__USE_XOPEN2K",E,E,N,N],[17,"__USE_XOPEN2K8",E,E,N,N],[17,"_ATFILE_SOURCE",E,E,N,N],[17,"__USE_MISC",E,E,N,N],[17,"__USE_ATFILE",E,E,N,N],[17,"__USE_FORTIFY_LEVEL",E,E,N,N],[17,"__GLIBC_USE_DEPRECATED_GETS",E,E,N,N],[17,"_STDC_PREDEF_H",E,E,N,N],[17,"__STDC_IEC_559__",E,E,N,N],[17,"__STDC_IEC_559_COMPLEX__",E,E,N,N],[17,"__STDC_ISO_10646__",E,E,N,N],[17,"__STDC_NO_THREADS__",E,E,N,N],[17,"__GNU_LIBRARY__",E,E,N,N],[17,"__GLIBC__",E,E,N,N],[17,"__GLIBC_MINOR__",E,E,N,N],[17,"_SYS_CDEFS_H",E,E,N,N],[17,"__glibc_c99_flexarr_available",E,E,N,N],[17,"__WORDSIZE",E,E,N,N],[17,"__WORDSIZE_TIME64_COMPAT32",E,E,N,N],[17,"__SYSCALL_WORDSIZE",E,E,N,N],[17,"__HAVE_GENERIC_SELECTION",E,E,N,N],[17,"__GLIBC_USE_LIB_EXT2",E,E,N,N],[17,"__GLIBC_USE_IEC_60559_BFP_EXT",E,E,N,N],[17,"__GLIBC_USE_IEC_60559_FUNCS_EXT",E,E,N,N],[17,"__GLIBC_USE_IEC_60559_TYPES_EXT",E,E,N,N],[17,"_BITS_TYPES_H",E,E,N,N],[17,"_BITS_TYPESIZES_H",E,E,N,N],[17,"__OFF_T_MATCHES_OFF64_T",E,E,N,N],[17,"__INO_T_MATCHES_INO64_T",E,E,N,N],[17,"__RLIM_T_MATCHES_RLIM64_T",E,E,N,N],[17,"__FD_SETSIZE",E,E,N,N],[17,"_BITS_WCHAR_H",E,E,N,N],[17,"_BITS_STDINT_INTN_H",E,E,N,N],[17,"_BITS_STDINT_UINTN_H",E,E,N,N],[17,"INT8_MIN",E,E,N,N],[17,"INT16_MIN",E,E,N,N],[17,"INT32_MIN",E,E,N,N],[17,"INT8_MAX",E,E,N,N],[17,"INT16_MAX",E,E,N,N],[17,"INT32_MAX",E,E,N,N],[17,"UINT8_MAX",E,E,N,N],[17,"UINT16_MAX",E,E,N,N],[17,"UINT32_MAX",E,E,N,N],[17,"INT_LEAST8_MIN",E,E,N,N],[17,"INT_LEAST16_MIN",E,E,N,N],[17,"INT_LEAST32_MIN",E,E,N,N],[17,"INT_LEAST8_MAX",E,E,N,N],[17,"INT_LEAST16_MAX",E,E,N,N],[17,"INT_LEAST32_MAX",E,E,N,N],[17,"UINT_LEAST8_MAX",E,E,N,N],[17,"UINT_LEAST16_MAX",E,E,N,N],[17,"UINT_LEAST32_MAX",E,E,N,N],[17,"INT_FAST8_MIN",E,E,N,N],[17,"INT_FAST16_MIN",E,E,N,N],[17,"INT_FAST32_MIN",E,E,N,N],[17,"INT_FAST8_MAX",E,E,N,N],[17,"INT_FAST16_MAX",E,E,N,N],[17,"INT_FAST32_MAX",E,E,N,N],[17,"UINT_FAST8_MAX",E,E,N,N],[17,"UINT_FAST16_MAX",E,E,N,N],[17,"UINT_FAST32_MAX",E,E,N,N],[17,"INTPTR_MIN",E,E,N,N],[17,"INTPTR_MAX",E,E,N,N],[17,"UINTPTR_MAX",E,E,N,N],[17,"PTRDIFF_MIN",E,E,N,N],[17,"PTRDIFF_MAX",E,E,N,N],[17,"SIG_ATOMIC_MIN",E,E,N,N],[17,"SIG_ATOMIC_MAX",E,E,N,N],[17,"SIZE_MAX",E,E,N,N],[17,"WINT_MIN",E,E,N,N],[17,"WINT_MAX",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_LOCAL_ADDRESS",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_CLUSTER_FILE",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_TRACE_ENABLE",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_TRACE_ROLL_SIZE",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_TRACE_MAX_LOGS_SIZE",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_TRACE_LOG_GROUP",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_TRACE_FORMAT",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_KNOB",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_TLS_PLUGIN",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_TLS_CERT_BYTES",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_TLS_CERT_PATH",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_TLS_KEY_BYTES",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_TLS_KEY_PATH",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_TLS_VERIFY_PEERS",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_BUGGIFY_ENABLE",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_BUGGIFY_DISABLE",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_BUGGIFY_SECTION_ACTIVATED_PROBABILITY",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_BUGGIFY_SECTION_FIRED_PROBABILITY",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_TLS_CA_BYTES",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_TLS_CA_PATH",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_TLS_PASSWORD",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_DISABLE_MULTI_VERSION_CLIENT_API",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_CALLBACKS_ON_EXTERNAL_THREADS",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_EXTERNAL_CLIENT_LIBRARY",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_EXTERNAL_CLIENT_DIRECTORY",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_DISABLE_LOCAL_CLIENT",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_DISABLE_CLIENT_STATISTICS_LOGGING",E,E,N,N],[17,"FDBNetworkOption_FDB_NET_OPTION_ENABLE_SLOW_TASK_PROFILING",E,E,N,N],[17,"FDBDatabaseOption_FDB_DB_OPTION_LOCATION_CACHE_SIZE",E,E,N,N],[17,"FDBDatabaseOption_FDB_DB_OPTION_MAX_WATCHES",E,E,N,N],[17,"FDBDatabaseOption_FDB_DB_OPTION_MACHINE_ID",E,E,N,N],[17,"FDBDatabaseOption_FDB_DB_OPTION_DATACENTER_ID",E,E,N,N],[17,"FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_TIMEOUT",E,E,N,N],[17,"FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_RETRY_LIMIT",E,E,N,N],[17,"FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_MAX_RETRY_DELAY",E,E,N,N],[17,"FDBDatabaseOption_FDB_DB_OPTION_SNAPSHOT_RYW_ENABLE",E,E,N,N],[17,"FDBDatabaseOption_FDB_DB_OPTION_SNAPSHOT_RYW_DISABLE",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_CAUSAL_WRITE_RISKY",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_CAUSAL_READ_RISKY",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_CAUSAL_READ_DISABLE",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_NEXT_WRITE_NO_WRITE_CONFLICT_RANGE",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_READ_YOUR_WRITES_DISABLE",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_READ_AHEAD_DISABLE",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_DURABILITY_DATACENTER",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_DURABILITY_RISKY",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_DURABILITY_DEV_NULL_IS_WEB_SCALE",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_PRIORITY_SYSTEM_IMMEDIATE",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_PRIORITY_BATCH",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_INITIALIZE_NEW_DATABASE",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_ACCESS_SYSTEM_KEYS",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_READ_SYSTEM_KEYS",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_DEBUG_RETRY_LOGGING",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_TRANSACTION_LOGGING_ENABLE",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_DEBUG_TRANSACTION_IDENTIFIER",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_LOG_TRANSACTION",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_TIMEOUT",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_RETRY_LIMIT",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_MAX_RETRY_DELAY",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_SNAPSHOT_RYW_ENABLE",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_SNAPSHOT_RYW_DISABLE",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_LOCK_AWARE",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_USED_DURING_COMMIT_PROTECTION_DISABLE",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_READ_LOCK_AWARE",E,E,N,N],[17,"FDBTransactionOption_FDB_TR_OPTION_USE_PROVISIONAL_PROXIES",E,E,N,N],[17,"FDBStreamingMode_FDB_STREAMING_MODE_WANT_ALL",E,E,N,N],[17,"FDBStreamingMode_FDB_STREAMING_MODE_ITERATOR",E,E,N,N],[17,"FDBStreamingMode_FDB_STREAMING_MODE_EXACT",E,E,N,N],[17,"FDBStreamingMode_FDB_STREAMING_MODE_SMALL",E,E,N,N],[17,"FDBStreamingMode_FDB_STREAMING_MODE_MEDIUM",E,E,N,N],[17,"FDBStreamingMode_FDB_STREAMING_MODE_LARGE",E,E,N,N],[17,"FDBStreamingMode_FDB_STREAMING_MODE_SERIAL",E,E,N,N],[17,"FDBMutationType_FDB_MUTATION_TYPE_ADD",E,E,N,N],[17,"FDBMutationType_FDB_MUTATION_TYPE_AND",E,E,N,N],[17,"FDBMutationType_FDB_MUTATION_TYPE_BIT_AND",E,E,N,N],[17,"FDBMutationType_FDB_MUTATION_TYPE_OR",E,E,N,N],[17,"FDBMutationType_FDB_MUTATION_TYPE_BIT_OR",E,E,N,N],[17,"FDBMutationType_FDB_MUTATION_TYPE_XOR",E,E,N,N],[17,"FDBMutationType_FDB_MUTATION_TYPE_BIT_XOR",E,E,N,N],[17,"FDBMutationType_FDB_MUTATION_TYPE_APPEND_IF_FITS",E,E,N,N],[17,"FDBMutationType_FDB_MUTATION_TYPE_MAX",E,E,N,N],[17,"FDBMutationType_FDB_MUTATION_TYPE_MIN",E,E,N,N],[17,"FDBMutationType_FDB_MUTATION_TYPE_SET_VERSIONSTAMPED_KEY",E,E,N,N],[17,"FDBMutationType_FDB_MUTATION_TYPE_SET_VERSIONSTAMPED_VALUE",E,E,N,N],[17,"FDBMutationType_FDB_MUTATION_TYPE_BYTE_MIN",E,E,N,N],[17,"FDBMutationType_FDB_MUTATION_TYPE_BYTE_MAX",E,E,N,N],[17,"FDBMutationType_FDB_MUTATION_TYPE_COMPARE_AND_CLEAR",E,E,N,N],[17,"FDBConflictRangeType_FDB_CONFLICT_RANGE_TYPE_READ",E,E,N,N],[17,"FDBConflictRangeType_FDB_CONFLICT_RANGE_TYPE_WRITE",E,E,N,N],[17,"FDBErrorPredicate_FDB_ERROR_PREDICATE_RETRYABLE",E,E,N,N],[17,"FDBErrorPredicate_FDB_ERROR_PREDICATE_MAYBE_COMMITTED",E,E,N,N],[17,"FDBErrorPredicate_FDB_ERROR_PREDICATE_RETRYABLE_NOT_COMMITTED",E,E,N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[2],E,E,0,[[["self"]],[T]]],[11,R[3],E,E,0,[[["self"],[T]]]],[11,R[4],E,E,0,[[[U]],[R[1]]]],[11,R[5],E,E,0,[[],[R[1]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[2],E,E,2,[[["self"]],[T]]],[11,R[3],E,E,2,[[["self"],[T]]]],[11,R[4],E,E,2,[[[U]],[R[1]]]],[11,R[5],E,E,2,[[],[R[1]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[2],E,E,3,[[["self"]],[T]]],[11,R[3],E,E,3,[[["self"],[T]]]],[11,R[4],E,E,3,[[[U]],[R[1]]]],[11,R[5],E,E,3,[[],[R[1]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[2],E,E,4,[[["self"]],[T]]],[11,R[3],E,E,4,[[["self"],[T]]]],[11,R[4],E,E,4,[[[U]],[R[1]]]],[11,R[5],E,E,4,[[],[R[1]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[2],E,E,1,[[["self"]],[T]]],[11,R[3],E,E,1,[[["self"],[T]]]],[11,R[4],E,E,1,[[[U]],[R[1]]]],[11,R[5],E,E,1,[[],[R[1]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"clone",E,E,0,[[["self"]],[R[10]]]],[11,"clone",E,E,2,[[["self"]],["fdb_future"]]],[11,"clone",E,E,3,[[["self"]],["fdb_database"]]],[11,"clone",E,E,4,[[["self"]],["fdb_transaction"]]],[11,"clone",E,E,1,[[["self"]],[R[11]]]],[11,"fmt",E,E,0,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",E,E,2,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",E,E,3,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",E,E,4,[[["self"],[R[12]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[12]]],[R[1]]]]],"p":[[3,R[10]],[3,R[11]],[3,R[13]],[3,R[14]],[3,R[15]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);